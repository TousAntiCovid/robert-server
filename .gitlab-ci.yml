include:
  - project: stopcovid19/accueil
    ref: master
    file: gitlab/gitlab-ci-java-template.yml

build-docker:
  image: docker:20.10.17
  needs: ["build"]
  stage: build
  tags:
    - caascad
  variables:
    K8S_REGISTRY_IMAGE_CRYPTO: $K8S_REGISTRY/robert-crypto:$CI_COMMIT_SHORT_SHA
    K8S_REGISTRY_IMAGE_CRYPTO_FLYWAY: $K8S_REGISTRY/robert-crypto:$CI_COMMIT_SHORT_SHA-flyway
    K8S_REGISTRY_IMAGE_BATCH: $K8S_REGISTRY/robert-batch:$CI_COMMIT_SHORT_SHA
    K8S_REGISTRY_IMAGE_WS: $K8S_REGISTRY/robert-ws:$CI_COMMIT_SHORT_SHA
  script:
    - echo -n $K8S_REGISTRY_PASSWORD | docker login -u $K8S_REGISTRY_USER --password-stdin $K8S_REGISTRY
    - docker build -t $K8S_REGISTRY_IMAGE_CRYPTO -f robert-crypto-grpc-server/Dockerfile.k8s robert-crypto-grpc-server
    - docker build -t $K8S_REGISTRY_IMAGE_CRYPTO_FLYWAY -f robert-crypto-grpc-server-storage/Dockerfile.flyway robert-crypto-grpc-server-storage
    - docker build -t $K8S_REGISTRY_IMAGE_BATCH -f robert-server-batch/Dockerfile.k8s robert-server-batch
    - docker build -t $K8S_REGISTRY_IMAGE_WS -f robert-server-ws-rest/Dockerfile.k8s robert-server-ws-rest
    - docker push $K8S_REGISTRY_IMAGE_CRYPTO
    - docker push $K8S_REGISTRY_IMAGE_BATCH
    - docker push $K8S_REGISTRY_IMAGE_WS
    - docker push $K8S_REGISTRY_IMAGE_CRYPTO_FLYWAY
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'

e2e-tests-kubernetes:
  image: eclipse-temurin:11-jre-alpine
  stage: build
  needs: ["build"]
  variables:
    SPRING_DATA_MONGODB_URI: $E2E_SPRING_DATA_MONGODB_URI
    SPRING_PROFILES_ACTIVE: "real-captcha"
    ROBERT_SUBMISSION_JWT_SIGNING_KEY: $E2E_ROBERT_SUBMISSION_JWT_SIGNING_KEY
    ROBERT_CRYPTO_PUBLIC_KEY: $E2E_ROBERT_CRYPTO_PUBLIC_KEY
    ROBERT_BATCH_COMMAND: "ID=$(uuidgen) ; kubectl create job --from=cronjobs/robert-batch-job end-to-end-batch-job-$ID --namespace=robert-batch ; kubectl wait --for=condition=complete job/end-to-end-batch-job-$ID --namespace=robert-batch --timeout=3m"
    ROBERT_BATCH_LAUNCH_WITH_KUBECTL: "true"
    ROBERT_WS_REST_INTERNAL_BASE_URL: $E2E_ROBERT_WS_REST_INTERNAL_BASE_URL
    ROBERT_WS_REST_BASE_URL: $E2E_ROBERT_WS_REST_BASE_URL
    ROBERT_CAPTCHADATASOURCE_PASSWORD: $E2E_ROBERT_CAPTCHADATASOURCE_PASSWORD
    ROBERT_CAPTCHADATASOURCE_USERNAME: "pocinit"
    ROBERT_CAPTCHADATASOURCE_URL: $E2E_ROBERT_CAPTCHADATASOURCE_URL
    ROBERT_CRYPTODATASOURCE_PASSWORD: $E2E_ROBERT_CRYPTODATASOURCE_PASSWORD
    ROBERT_CRYPTODATASOURCE_USERNAME: "pocinit"
    ROBERT_CRYPTODATASOURCE_URL: $E2E_ROBERT_CRYPTODATASOURCE_URL
    ROBERT_CLIENT_DEVICE_TYPES: "ANDROID"
  script:
    - apk add --no-cache curl uuidgen
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - kubectl version --short
    - java -jar robert-e2e-tests/target/robert-e2e-tests-*.jar @RealTimeEnvironment
  after_script:
    - kubectl logs -l app=robert-ws --prefix=true --since=1h --all-containers --ignore-errors -n=robert-ws | gzip > kubernetes-ws.log.gz
    - kubectl logs -l app=robert-crypto --prefix=true --since=1h --all-containers --ignore-errors -n=robert-crypto | gzip > kubernetes-crypto.log.gz
    - kubectl logs -l app=submission-code-server --prefix=true --since=1h --all-containers --ignore-errors -n=submission-code | gzip > kubernetes-submission.log.gz
    - kubectl logs -l app=captcha-server --prefix=true --since=1h --all-containers --ignore-errors -n=captcha | gzip > kubernetes-captcha.log.gz
    - kubectl logs -l app=robert-batch --prefix=true --since=1h --all-containers --ignore-errors -n=robert-batch | gzip > kubernetes-batch.log.gz
  artifacts:
    when: always
    paths:
      - "**/target/cucumber-reports.html"
      - "kubernetes*.log.gz"
  tags:
    - kubernetes
#  rules:
#    - if: '$CI_COMMIT_BRANCH == "develop"'

e2e-tests-docker:
  script:
    # wait for services to be healthy but exclude 'flyway' and 'batch' which are short-lived services and may lead --wait option to deadlock
    - docker-compose up --wait $(docker-compose ps --services | grep -v flyway | grep -v batch)
    - java -jar robert-e2e-tests/target/robert-e2e-tests-*.jar

publish-deployment:
  stage: publish
  variables:
    ENVIRONMENT: "int"
  script:
    # Configure robert-crypto deployment
    - basepath=$(pwd)
    - cd $basepath/robert-crypto-grpc-server/src/k8s/base
    - kustomize edit set image crypto-image=$K8S_REGISTRY/robert-crypto:$CI_COMMIT_SHORT_SHA
    - kustomize edit set image flyway-image=$K8S_REGISTRY/robert-crypto:$CI_COMMIT_SHORT_SHA-flyway
    - kustomize build . > /tmp/deployments/$ENVIRONMENT/robert-crypto-grpc-server/deployment.yml
    # Configure robert-batch deployment
    - cd $basepath/robert-server-batch/src/k8s/base
    - kustomize edit set image batch-image=$K8S_REGISTRY/robert-batch:$CI_COMMIT_SHORT_SHA
    - kustomize build . > /tmp/deployments/$ENVIRONMENT/robert-server-batch/deployment.yml
    # Configure robert-ws deployment
    - cd $basepath/robert-server-ws-rest/src/k8s/base
    - kustomize edit set image ws-image=$K8S_REGISTRY/robert-ws:$CI_COMMIT_SHORT_SHA
    - kustomize build . > /tmp/deployments/$ENVIRONMENT/robert-server-ws-rest/deployment.yml
    - sed -i "s/\$K8S_INGRESS_HOST/$K8S_INGRESS_HOST/g" /tmp/deployments/$ENVIRONMENT/robert-server-ws-rest/deployment.yml
    # Add deployments and push
    - cd /tmp/deployments
    - git add .
    - git commit -m "$CI_COMMIT_SHORT_SHA"
    - git push origin master
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'

deploy-int:
  stage: deploy
  variables:
    APP_VERSION: develop-SNAPSHOT
  trigger:
    project: stemcovid19/infrastructure/functional-zone/services/robert/robert-ansible
    branch: master
    strategy: depend
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
