image: registry.gitlab.inria.fr/stemcovid19/tac-server/docker-image/tac-oraclejava8:latest

variables:
  MAVEN_CLI_OPTS: "-Dmaven.repo.local=.m2/repository --batch-mode"
  GIT_SUBMODULE_STRATEGY: recursive
  
cache:
  paths:
    - .m2/repository/

stages:
  - build
  - test
  - docker
  - deploy

.build_template:
  stage: build
  script:
    # build all (for other phase such as docker) but skip tests
    - cd $COMPONENT
    - mvn $MAVEN_CLI_OPTS -DskipTests=true -P swagger,logstash  package
  artifacts:
    paths:
      - $COMPONENT/*/target/*.jar

.test_template:
  stage: test
  script:
    - cd $COMPONENT
    - mvn $MAVEN_CLI_OPTS verify
  artifacts:
    when: always
    reports:
      junit:
        - "$COMPONENT/*/target/surefire-reports/TEST-*.xml"
        - "$COMPONENT/*/target/failsafe-reports/TEST-*.xml"

.docker_template:
  image: registry.gitlab.inria.fr/stemcovid19/tac-server/docker-image/docker-git:latest
  stage: docker
  tags:    
    - docker_build 
  script:
    - cd $COMPONENT/$SUBCOMPONENT
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/$SUBCOMPONENT:$CI_COMMIT_REF_SLUG -f src/main/docker/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/$SUBCOMPONENT:$CI_COMMIT_REF_SLUG

.deploy_template:
  stage: deploy
  script:
    - cd $COMPONENT
    - VERSION=$(mvn --non-recursive help:evaluate -Dexpression=project.version -q -DforceStdout)
    - mvn versions:set -DnewVersion=$VERSION-$CI_PIPELINE_IID -DprocessAllModules=true
    - mvn $MAVEN_CLI_OPTS -DskipTests=true  -DnexusReleasesUrl=$CI_SERVER_URL/api/v4/projects/$CI_PROJECT_ID/packages/maven -DnexusSnapshotsUrl=$CI_SERVER_URL/api/v4/projects/$CI_PROJECT_ID/packages/maven -s ../.gitlab-ci/ci_settings.xml deploy
  only:
    - develop
    - master

build_robert-server:
  extends: .build_template
  variables:
    COMPONENT: "robert-server"

build_tac-warning:
  extends: .build_template
  variables:
    COMPONENT: "tac-warning"

build_system_test:
  extends: .build_template
  variables:
    COMPONENT: "system-test"

build_robert-push-notif-server:
  extends: .build_template
  variables:
    COMPONENT: "robert-push-notif-server"

build_submission-code-server:
  extends: .build_template
  variables:
    COMPONENT: "submission-code-server"

test_tac-warning:
  extends: .test_template
  needs: ["build_tac-warning"]
  variables:
    COMPONENT: "tac-warning"

test_robert-server:
  extends: .test_template
  needs: ["build_robert-server"]
  variables:
    COMPONENT: "robert-server"
  allow_failure: true

test_robert-push-notif-server:
  extends: .test_template
  needs: ["build_robert-push-notif-server"]
  variables:
    COMPONENT: "robert-push-notif-server"

test_submission-code-server:
  extends: .test_template
  needs: ["build_submission-code-server"]
  variables:
    COMPONENT: "submission-code-server"
  allow_failure: true

docker-robert-crypto-grpc-server:
  image: registry.gitlab.inria.fr/stemcovid19/tac-server/docker-image/docker-git:latest
  stage: docker
  tags:    
    - docker_build 
  needs: ["build_robert-server"]
  script:
    - cd robert-server/robert-crypto-grpc-server
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.inria.fr/stemcovid19/wp3-robert-server/hsm-tools 
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/robert-crypto-grpc-server:$CI_COMMIT_REF_SLUG -f src/main/docker/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/robert-crypto-grpc-server:$CI_COMMIT_REF_SLUG

docker-robert-server-ws-rest:
  extends: .docker_template
  needs: ["build_robert-server"]
  variables:
    COMPONENT: "robert-server"
    SUBCOMPONENT: "robert-server-ws-rest"

docker-tac-warning:
  extends: .docker_template
  needs: ["build_tac-warning"]
  variables:
    COMPONENT: "tac-warning"
    SUBCOMPONENT: "tac-warning-ws-rest"

docker-robert-push-notif-server:
  extends: .docker_template
  needs: ["build_robert-push-notif-server"] 
  variables:
    COMPONENT: "robert-push-notif-server"
    SUBCOMPONENT: "robert-push-notif-server-ws-rest"

docker-submission-code-server:
  extends: .docker_template
  needs: ["build_submission-code-server"]
  variables:
    COMPONENT: "submission-code-server"
    SUBCOMPONENT: "submission-code-server-ws-rest"

docker-captcha-orange-server:
  image: registry.gitlab.inria.fr/stemcovid19/tac-server/docker-image/docker-git:latest
  stage: docker
  needs: []
  tags:    
    - docker_build 
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.inria.fr/stemcovid19/wp3-robert-server/cicd/deploy_captcha-orange.git
    - cd deploy_captcha-orange
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/deploy-captcha-orange-rest:$CI_COMMIT_REF_SLUG -f docker/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/deploy-captcha-orange-rest:$CI_COMMIT_REF_SLUG

deploy-robert-server:
  extends: .deploy_template
  needs: ["test_robert-server"]
  variables:
    COMPONENT: "robert-server"

deploy-robert-push-notif-server:
  extends: .deploy_template
  needs: ["test_robert-push-notif-server"]
  variables:
    COMPONENT: "robert-push-notif-server"

deploy-submission-code-server:
  extends: .deploy_template
  needs: ["test_submission-code-server"]
  variables:
    COMPONENT: "submission-code-server"

deploy-tac-warning:
  extends: .deploy_template
  needs: ["test_tac-warning"]
  variables:
    COMPONENT: "tac-warning"
