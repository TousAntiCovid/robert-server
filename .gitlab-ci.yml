image: registry.gitlab.inria.fr/stemcovid19/tac-server/docker-image/tac-openjdk11:latest

variables:
  MAVEN_CLI_OPTS: "-Dmaven.repo.local=.m2/repository --batch-mode -s $CI_PROJECT_DIR/.gitlab-ci/ci_settings.xml"
  GIT_SUBMODULE_STRATEGY: recursive

cache:
  paths:
    - .m2/repository/

stages:
  - build
  - docker
  - integration
  - deploy

.build_template:
  stage: build
  script:
    - cd $COMPONENT
    - mvn $MAVEN_CLI_OPTS -P swagger,logstash verify
  artifacts:
    paths:
      - $COMPONENT/*/target/*.jar
    when: always
    reports:
      junit:
        - "$COMPONENT/*/target/surefire-reports/TEST-*.xml"
        - "$COMPONENT/*/target/failsafe-reports/TEST-*.xml"
  tags:
    - ci

.docker_template:
  image: registry.gitlab.inria.fr/stemcovid19/tac-server/docker-image/docker-git:latest
  stage: docker
  tags:
    - docker_build
  script:
    - cd $COMPONENT/$SUBCOMPONENT
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --pull -t $CI_REGISTRY_IMAGE/$SUBCOMPONENT:$CI_COMMIT_REF_SLUG -f src/main/docker/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/$SUBCOMPONENT:$CI_COMMIT_REF_SLUG

.deploy_template:
  stage: deploy
  script:
    - cd $COMPONENT
    - ../.gitlab-ci/update-artefact-version-if-not-a-tag.sh
    - mvn $MAVEN_CLI_OPTS -DskipTests=true  -DnexusReleasesUrl=$CI_SERVER_URL/api/v4/projects/$CI_PROJECT_ID/packages/maven -DnexusSnapshotsUrl=$CI_SERVER_URL/api/v4/projects/$CI_PROJECT_ID/packages/maven deploy
  only:
    - develop
    - tags
  tags:
    - ci

build_robert-server:
  extends: .build_template
  variables:
    COMPONENT: "robert-server"

build_tac-warning:
  extends: .build_template
  variables:
    COMPONENT: "tac-warning"

build_robert-push-notif-server:
  extends: .build_template
  variables:
    COMPONENT: "robert-push-notif-server"

build_submission-code-server:
  extends: .build_template
  variables:
    COMPONENT: "submission-code-server"

build_clea:
  extends: .build_template
  variables:
    COMPONENT: "clea"

build_analytics-server:
  extends: .build_template
  variables:
    COMPONENT: "analytics-server"

docker-robert-crypto-grpc-server:
  extends: .docker_template
  needs: [ "build_robert-server" ]
  variables:
    COMPONENT: "robert-server"
    SUBCOMPONENT: "robert-crypto-grpc-server"

docker-robert-server-ws-rest:
  extends: .docker_template
  needs: ["build_robert-server"]
  variables:
    COMPONENT: "robert-server"
    SUBCOMPONENT: "robert-server-ws-rest"

docker-robert-server-batch:
  extends: .docker_template
  needs: ["build_robert-server"]
  variables:
    COMPONENT: "robert-server"
    SUBCOMPONENT: "robert-server-batch"

docker-tac-warning:
  extends: .docker_template
  needs: ["build_tac-warning"]
  variables:
    COMPONENT: "tac-warning"
    SUBCOMPONENT: "tac-warning-ws-rest"

docker-robert-push-notif-server:
  extends: .docker_template
  needs: ["build_robert-push-notif-server"]
  variables:
    COMPONENT: "robert-push-notif-server"
    SUBCOMPONENT: "robert-push-notif-server-ws-rest"

docker-submission-code-server:
  extends: .docker_template
  needs: ["build_submission-code-server"]
  variables:
    COMPONENT: "submission-code-server"
    SUBCOMPONENT: "submission-code-server-ws-rest"

docker-captcha-orange-server:
  image: registry.gitlab.inria.fr/stemcovid19/tac-server/docker-image/docker-git:latest
  stage: docker
  needs: []
  tags:
    - docker_build
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.inria.fr/stemcovid19/wp3-robert-server/cicd/deploy_captcha-orange.git
    - cd deploy_captcha-orange
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/deploy-captcha-orange-rest:$CI_COMMIT_REF_SLUG -f docker/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/deploy-captcha-orange-rest:$CI_COMMIT_REF_SLUG

integration_tests:
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: unix:///var/run/docker.sock
  image: registry.gitlab.inria.fr/stemcovid19/tac-server/docker-image/tac-system-tests:latest
  stage: integration
  needs:
    - docker-captcha-orange-server
    - docker-robert-crypto-grpc-server
    - docker-tac-warning
    - docker-robert-server-ws-rest
    - docker-robert-server-batch
    - docker-submission-code-server
    - docker-robert-push-notif-server
  tags:
    - docker_run
  before_script:
    - docker info
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
    - if: '$CI_COMMIT_BRANCH == "develop"'
      when: on_success
    - if: $CI_COMMIT_TAG
      when: on_success
    - if: $INTEGRATION_TESTS
      when: on_success
  script:
    - export DOCKER_TAG=$CI_COMMIT_REF_SLUG
    - cd environment-setup/integration/compose
    - echo "ROBERT_CRYPTO_TAG=$DOCKER_TAG" > .env
    - echo "ROBERT_SUBMISSION_TAG=$DOCKER_TAG" >> .env
    - echo "ROBERT_SERVER_TAG=$DOCKER_TAG" >> .env
    - echo "ROBERT_SERVER_BATCH_TAG=$DOCKER_TAG" >> .env
    - echo "ROBERT_PUSH_TAG=$DOCKER_TAG" >> .env
    - echo "TACW_TAG=$DOCKER_TAG" >> .env
    - echo "AUTO_LETS_ENCRYPT=no" >> .env
    - echo "REDIRECT_HTTP_TO_HTTPS=no" >> .env
    - echo "TAC_DOCKER_COMPOSE_NETWORK=compose_tac" >> .env
    - echo "ROBERT_JWT_PRIVATE_KEY=${CI_ROBERT_JWT_PRIVATE_KEY}" >> .env
    - echo "ROBERT_JWT_PUBLIC_KEY=${CI_ROBERT_JWT_PUBLIC_KEY}" >> .env
    - echo "ROBERT_JWT_TOKEN_DECLARE_PUBLIC_KID=${CI_ROBERT_JWT_TOKEN_DECLARE_PUBLIC_KID}" >> .env
    - echo "ROBERT_JWT_TOKEN_DECLARE_PRIVATE_KEY=${CI_ROBERT_JWT_TOKEN_DECLARE_PRIVATE_KEY}" >> .env
    - echo "ROBERT_JWT_TOKEN_ANALYTICS_PRIVATE_KEY=${CI_ROBERT_JWT_TOKEN_ANALYTICS_PRIVATE_KEY}" >> .env
    - cat .env
    - docker login -u $CI_REGISTRY_USER --password-stdin  $CI_REGISTRY <<< "$CI_REGISTRY_PASSWORD"
    - echo $PWD
    - ./startDedicatedDockerNetwork.sh
    - ./restart.sh
    - docker network ls
    - docker ps
    - cd $CI_PROJECT_DIR/system-test
    - "export ROBERT_HOST=127.0.0.1"
    - "export ROBERT_PORT=8086"
    - "export TACW_HOST=127.0.0.1"
    - "export TACW_PORT=8088"
    - "export ROBERT_BASE_URL=http://$ROBERT_HOST:$ROBERT_PORT/api/"
    - "export TACW_BASE_URL=http://$TACW_HOST:$TACW_PORT/api/tac-warning"
    - echo "ROBERT_BASE_URL=$ROBERT_BASE_URL" > src/test/resources/config.properties
    - echo "ROBERT_VERSION=v4" >> src/test/resources/config.properties
    - echo "TACW_BASE_URL=$TACW_BASE_URL" >> src/test/resources/config.properties
    - echo "SALT_RANGE=1000" >> src/test/resources/config.properties
    - echo "TIME_ROUNDING=900" >> src/test/resources/config.properties
    - echo "TACW_VERSION=v2" >> src/test/resources/config.properties
    - echo "" >> src/test/resources/config.properties
    - cat src/test/resources/config.properties
    - echo $PWD
    - ls -ls
    - mvn $MAVEN_CLI_OPTS -Duser.timezone='Europe/Paris' verify
  after_script:
    - docker network ls
    - docker ps
    - cd environment-setup/integration/compose
    - ./stopAll.sh
    - ./stopDedicatedDockerNetwork.sh

  artifacts:
    when: always
    paths:
      - environment-setup/integration/compose/logs/*
      - "system-test/target/surefire-reports/TEST-*.xml"
    reports:
      junit:
        - "system-test/target/surefire-reports/TEST-*.xml"


deploy-robert-server:
  extends: .deploy_template
  needs: ["test_robert-server"]
  variables:
    COMPONENT: "robert-server"

deploy-robert-push-notif-server:
  extends: .deploy_template
  needs: ["test_robert-push-notif-server"]
  variables:
    COMPONENT: "robert-push-notif-server"

deploy-submission-code-server:
  extends: .deploy_template
  needs: ["test_submission-code-server"]
  variables:
    COMPONENT: "submission-code-server"

deploy-tac-warning:
  extends: .deploy_template
  needs: ["test_tac-warning"]
  variables:
    COMPONENT: "tac-warning"

deploy-clea:
  extends: .deploy_template
  needs: ["test_clea"]
  variables:
    COMPONENT: "clea"

deploy-analytics-server:
  extends: .deploy_template
  needs: ["test_analytics-server"]
  variables:
    COMPONENT: "analytics-server"