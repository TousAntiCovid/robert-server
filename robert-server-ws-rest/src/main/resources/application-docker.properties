controller.path.prefix=/api

controller.internal.path.prefix=/internal/api

push.api.path=/push-token

push.api.path.token=/{token}

push.api.version=${PUSH_API_VERSION:/v1}

debug=${ROBERT_SERVER_DEBUG_ERRORS:false}

server.port=${ROBERT_SERVER_PORT:8086}
## Use uri to be able to connect to replica sets / sharded clusters
## Giving a value to $ROBERT_SERVER_DB_URI will bypass ROBERT_SERVER_DB_HOST, ROBERT_SERVER_DB_PORT and ROBERT_SERVER_DB_NAME
spring.data.mongodb.uri=${ROBERT_SERVER_DB_URI:mongodb\://${ROBERT_SERVER_DB_HOST:mongo}\:${ROBERT_SERVER_DB_PORT:27017}/${ROBERT_SERVER_DB_NAME:protectedRobertDB}}

# The hostname of the crypto server
robert.crypto.server.host=${ROBERT_CRYPTO_SERVER_HOST:robert-crypto-grpc-server}

# The port of the crypto server
robert.crypto.server.port=${ROBERT_CRYPTO_SERVER_PORT:9090}

# Submission code server
submission.code.server.host=${SUBMISSION_CODE_SERVER_HOST:submission-code-server-ws-rest}
submission.code.server.port=${SUBMISSION_CODE_SERVER_PORT:8087}
submission.code.server.verify.path=/api/v1/verify

# Internal captcha service
captcha.internal.gateway.enabled=${CAPTCHA_INTERNAL_GATEWAY_ENABLED:false}
captcha.internal.hostname=${CAPTCHA_INTERNAL_HOSTNAME:http://mock-captcha:8055}
captcha.internal.verify.url=${CAPTCHA_INTERNAL_VERIFY_URL:http://mock-captcha:8055/private/api/v1/captcha/{captchaId}/checkAnswer}
captcha.internal.success.code=${CAPTCHA_INTERNAL_SUCCESS_CODE:SUCCESS}

# Define the duration limit between Request
robert.esr.limit=${ESR_LIMIT:1}

# Available endpoints for the monitoring
management.endpoints.web.exposure.include=${ROBERT_SERVER_MONITORING_ENDPOINTS:health,metrics}

robert.server.country-code=${ROBERT_SERVER_COUNTRY_CODE:0x21}
robert.server.request-time-delta-tolerance=${ROBERT_SERVER_REQUEST_TIME_DELTA_TOLERANCE:60}
robert.server.status-request-minimum-epoch-gap=${ROBERT_SERVER_ESR_MINI_EPOCH_GAP:2}
robert.server.captcha-challenge-timestamp-tolerance=${ROBERT_SERVER_CAPTCHA_CHALLENGE_TIMESTAMP_TOLERANCE:15}
robert.server.time-start=${ROBERT_SERVER_TIMESTART:20200601}

push.server.host=${PUSH_SERVER_HOST:robert-push-notif-server-ws-rest}
push.server.port=${PUSH_SERVER_PORT:9096}

# Push server Timeout
push.server.connection.timeout-millis=${PUSH_SERVER_CONNECTION_TIMEOUT_MILLIS:10000}
push.server.global.timeout=${PUSH_SERVER_READ_TIMEOUT:10}

# JWT

robert.jwt.use-transient-key=true
# /!\ key existing in VAULT
robert.jwt.privatekey=${ROBERT_JWT_PRIVATE_KEY:whatever}
# Token lifetime in minutes
robert.jwt.lifetime=${ROBERT_JWT_TOKEN_LIFETIME:5}

robert.server.disable-check-captcha=true
robert.server.disable-check-token=true

robert.epoch-bundle-duration-in-days=4
#JWT declare token
robert.jwt.declare.public-kid=${ROBERT_JWT_TOKEN_DECLARE_PUBLIC_KID:public-kid}
robert.jwt.declare.private-key=${ROBERT_JWT_TOKEN_DECLARE_PRIVATE_KEY:declare-private-key}

#JWT analytics
robert.jwt.analytics.token.private-key=${ROBERT_JWT_TOKEN_ANALYTICS_PRIVATE_KEY:declare-private-key}
robert.jwt.analytics.token.lifetime=${ROBERT_JWT_TOKEN_ANALYTICS_LIFETIME:360}
