version: "3.8"
services:

  clea-ws-rest:
    image: clea-ws-rest
    build: ../clea-ws-rest/
    environment:
      SPRING_PROFILES_ACTIVE: dev,docker
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    networks:
      - clea-network
    restart: always

  clea-venue-consumer:
    image: clea-venue-consumer
    build: ../clea-venue-consumer/
    environment:
      SPRING_PROFILES_ACTIVE: dev,docker
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
    depends_on:
      - postgres
      - kafka
    ports:
      - "7070:8080"
    networks:
      - clea-network
    restart: always

  clea-batch:
    image: clea-batch:latest
    build: ../clea-batch/
    environment:
      SPRING_PROFILES_ACTIVE: docker
      BUCKET: clea-batch
    ports:
      - "15000:15000"
    depends_on:
      - postgres
    networks:
      - clea-network
    restart: "no"


  kafka:
    image: "wurstmeister/kafka:latest"
    environment:
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - clea-network
    restart: always

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - clea-network
    restart: always

  kafdrop:
    image: "obsidiandynamics/kafdrop:latest"
    environment:
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
      KAFKA_BROKERCONNECT: "kafka:29092"
      SERVER_SERVLET_CONTEXTPATH: "/kafdrop"
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    networks:
      - clea-network
    restart: always

  postgres:
    image: "postgres:latest"
    environment:
      POSTGRES_DB: cleadb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - "./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"
    networks:
      - clea-network
    restart: always

  pgadmin:
    image: "dpage/pgadmin4:latest"
    environment:
      PGADMIN_DEFAULT_EMAIL: user@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_LISTEN_PORT: 80
    depends_on:
      - postgres
    ports:
      - "8081:80"
    networks:
      - clea-network
    restart: always
    logging:
      driver: none

networks:
  clea-network:
    driver: bridge
    name: clea-network

