
spring.cloud.vault.enabled=false
spring.cloud.consul.enabled=false

# If you want to force the use of a specific logging option, uncomment this line. container will use the logback.xml withing the config folder
#logging.config=/work/config/logback.xml


controller.path.prefix=/api/tac-warning

server.port=8088
spring.datasource.url= jdbc:postgresql://postgreswarning:5432/warning?reWriteBatchedInserts=true
spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.properties.hibernate.jdbc.batch_size=3000
spring.jpa.properties.hibernate.order_inserts=true
spring.datasource.username=robert-warning
spring.datasource.password=robert
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

tacw.rest.robert_jwt_publickey=${ROBERT_JWT_PUBLIC_KEY}

spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true


# Available endpoints for the monitoring
management.endpoints.web.exposure.include=${TACW_SERVER_MONITORING_ENDPOINTS:health,metrics}

tacw.rest.jwt_report_authorization_disabled=false
tacw.rest.max_salt=1000

tacw.database.visit_token_retention_period_days=12
tacw.database.visit_token_deletion_job_cron_expression="0 1 * * *"

tacw.rest.max_visits=2500
tacw.rest.start_delta=900
tacw.rest.end_delta=7200


tacw.rest.venues.default.positive_cases_threshold: 2
tacw.rest.venues.default.risk_level: LOW
tacw.rest.venues.N.positive_cases_threshold: 1
tacw.rest.venues.L.positive_cases_threshold: 3
tacw.rest.venues.N.risk_level: HIGH
tacw.rest.venues.P.risk_level: HIGH
